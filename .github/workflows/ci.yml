name: test
on: ['push', 'pull_request']

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #          install and run linters
      #----------------------------------------------
      - uses: actions/checkout@v3
      - uses: chartboost/ruff-action@v1

  test:
    needs: linting
    strategy:
      fail-fast: true
      matrix:
        os: [ "ubuntu-latest", "macos-latest" ]
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12" ]
    runs-on: ${{ matrix.os }}
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install library
        run: poetry install --no-interaction
      #----------------------------------------------
      # run unit test suite
      #----------------------------------------------
      - name: Run unit tests
        run: |
          source .venv/bin/activate
          pytest -m "not integration" --cov

      #----------------------------------------------
      # run integration test
      # (only for one of the os, and python version)
      #----------------------------------------------
      - name: Run integration tests
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
        run: |
          source .venv/bin/activate
          pytest -m "integration" --cov